name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  backend-coverage:
    name: Backend Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        CI: true
    
    - name: Generate coverage report
      run: |
        echo "## Backend Coverage Report"
        npm test -- --coverage --coverageReporters=text-summary | tail -10
    
    - name: Check coverage thresholds
      run: |
        # Extract coverage percentages
        coverage_output=$(npm test -- --coverage --coverageReporters=json-summary 2>/dev/null || true)
        
        # Check if coverage meets minimum thresholds
        echo "Checking coverage thresholds..."
        echo "Minimum thresholds: 70% statements, 60% branches, 60% functions, 70% lines"
        
        # Note: Add actual threshold checking when coverage data is available
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/lcov.info
        flags: backend
        name: backend-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
      continue-on-error: true

  frontend-coverage:
    name: Frontend Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      working-directory: ./chess-analyzer-frontend
      run: npm ci
    
    - name: Run tests with coverage
      working-directory: ./chess-analyzer-frontend
      run: |
        # Note: Add test script when frontend tests are implemented
        echo "Frontend tests not yet implemented"
        echo "TODO: Add React Testing Library tests"
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v4
      with:
        files: ./chess-analyzer-frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
      continue-on-error: true

  coverage-summary:
    name: Coverage Summary
    runs-on: ubuntu-latest
    needs: [backend-coverage, frontend-coverage]
    if: always()
    
    steps:
    - name: Coverage Report
      run: |
        echo "## Test Coverage Summary"
        echo "- Backend Coverage: ${{ needs.backend-coverage.result }}"
        echo "- Frontend Coverage: ${{ needs.frontend-coverage.result }}"
        echo ""
        echo "ðŸ’¡ Tip: Aim for at least 80% code coverage for critical paths"